name: Deployment to Kinsta

on:
  pull_request:
    branches:
      - master
      - production
  push:
    branches:
      - master
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy changes on the server on the production folder
        uses: appleboy/ssh-action@master
        if: ${{ github.ref == 'refs/heads/production' }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh

            cd public
            echo "Current directoy: $(pwd)"
            git pull origin master

            composer install
            composer dump-autoload

            cd web/app/themes/rhomotion-theme
            echo "Current directoy: $(pwd)"
            composer install
            composer dump-autoload

            yarn
            yarn build

      - name: Deploy changes in the staging server
        uses: appleboy/ssh-action@master
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD}}
          port: ${{ secrets.SERVER_STAGING_SSH_PORT }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh

            cd public
            echo "Current directoy: $(pwd)"
            git pull origin master

            composer install
            composer dump-autoload

            cd web/app/themes/rhomotion-theme
            echo "Current directoy: $(pwd)"
            composer install
            composer dump-autoload

            yarn
            yarn build

  slackFailureNotification:
    name: Send slack failure notification
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: failure
          SLACK_WEBHOOK: ${{ vars.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Error deploying changes to the server :thinking_face:'

  slackSuccessNotification:
    name: Send slack success notification
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: success
          SLACK_WEBHOOK: ${{ vars.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Changes have been deployed successfully :rocket:'
